parameters:
  - name: tag
    type: string

  - name: armServiceConnection
    type: string

  - name: armSubscriptionId
    type: string

  - name: environmentName
    type: string

  - name: verifyCommit
    type: boolean
    default: true

jobs:
  - deployment: deploy_apps
    displayName: Deploy Container Apps

    # Fake environment (history/tracebility only)
    environment: '${{ parameters.environmentName }}'

    strategy:
      runOnce:
        deploy:
          steps:
          # Checkout to Build.SourcesDirectory
          - checkout: self

          # Install terraform, terragrunt, tflint
          - task: Bash@3
            displayName: Install Terragrunt and tflint
            inputs:
              filePath: scripts/install-terraform.sh

          # Generate teragrunt deployment variables
          - task: PowerShell@2
            displayName:  Generate deployment variables file
            inputs:
              targetType: inline
              pwsh: true
              workingDirectory: '$(Build.SourcesDirectory)/terraform/demoapp.v2/envs/prod'
              script: |
                $json_str  = @{
                  app_tag = '${{ parameters.tag }}'
                } | ConvertTo-Json
                $json_str | Write-Output
                $json_str | Out-File -FilePath 'deploy-vars.json' -Encoding utf8 -Force

          # Run terragrunt deployment for prod environment
          - task: AzureCLI@2
            displayName: Deploy applications to the Prod environment
            inputs:
              azureSubscription: ${{ parameters.armServiceConnection }}
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: '$(Build.SourcesDirectory)/terraform/demoapp.v2/envs/prod/apps'
              addSpnToEnvironment: true
              inlineScript: |
                export ARM_CLIENT_ID="$servicePrincipalId"
                export ARM_CLIENT_SECRET="$servicePrincipalKey"
                export ARM_TENANT_ID="$tenantId"
                export ARM_SUBSCRIPTION_ID="${{ parameters.armSubscriptionId }}"
                terragrunt run-all apply -auto-approve --terragrunt-non-interactive

          # Terraform output - get URLs of the apps
          - task: AzureCLI@2
            name: tfoutput
            displayName: Get URLs of the deployed apps
            inputs:
              azureSubscription: ${{ parameters.armServiceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              workingDirectory: '$(Build.SourcesDirectory)/terraform/demoapp.v2/envs/prod/apps'
              addSpnToEnvironment: true
              inlineScript: |
                $Env:ARM_CLIENT_ID = "$Env:servicePrincipalId"
                $Env:ARM_CLIENT_SECRET = "$Env:servicePrincipalKey"
                $Env:ARM_TENANT_ID = "$Env:tenantId"
                $Env:ARM_SUBSCRIPTION_ID = "${{ parameters.armSubscriptionId }}"

                $tf_output = terragrunt output -json | ConvertFrom-Json
                $urls = $tf_output.apps_url.value | %{ return "https://" + $_  } | Join-String -Separator ","
                Write-Host "Application URL list: ${urls}"
                Write-Host "##vso[task.setvariable variable=tf_app_urls;isOutput=true]${urls}"

# Verification job
  - job: verify_apps
    displayName: Run apps verification tests
    dependsOn: deploy_apps

    variables:
      terraformAppUrls: $[dependencies.deploy_apps.outputs['deploy_apps.tfoutput.tf_app_urls']]

    steps:
    - script: |
        pip install --upgrade pip
        pip install --upgrade pytest pytest-azurepipelines urllib3
      displayName: 'Install dependencies'

    - script: |
        echo "Whait 10 seconds before test"
        sleep 10
      displayName: 'Wait 10 seconds'

    - ${{ if parameters.verifyCommit }}:
      - script: |
          echo "URLs: $(terraformAppUrls), commit SHA: $(Build.SourceVersion)"
          pytest --app-urls "$(terraformAppUrls)" --commit "$(Build.SourceVersion)"
        displayName: 'Run infra tests'
        workingDirectory: $(Build.SourcesDirectory)/infra-tests

    - ${{ else }}:
      - script: |
          echo "URLs: $(terraformAppUrls), don't check commit SHA"
          pytest --app-urls "$(terraformAppUrls)"
        displayName: 'Run infra tests'
        workingDirectory: $(Build.SourcesDirectory)/infra-tests